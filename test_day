using NUnit.Framework;
using SampleApp_202101.Services;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SampleApp_202101.Test.Service
{
        //ソリューション→クリック追加新しいプロジェクト
        //テスト全てのプロジェクト「単体テストプロジェクト」（.NET Framewaork)ｃ＃
        //参照右クリック参照の追加
        //←プロジェクトチェックOK
        //テストプロジェクトー右クリックーNuget追加
        //Nunit　3TestAdapter
        //moq
        //メソッドはvoid

    [TestFixture]
    public class SalesServiceTest
    {
        private SalesService target;

        [SetUp]
        public void SetUp()
        {
            target = new SalesService();
        }

        //[TestCase("2020/12/01", "2021/11/01", "2020/7", 2020, 2021, 2020)]
        //[TestCase("2020/12/01", "2021/11/01", "2020/12", 2020, 2021, 2020)]
        //[TestCase("2020/12/01", "2021/11/01", "2021/1", 2020, 2021, 2021)]
        //[TestCase("2020/12/01", "2021/11/01", "2021/5", 2020, 2021, 2021)]
        //[TestCase("2020/11/01", "2021/10/01", "2020/6", 2020, 2021, 2021)]
        //[TestCase("2020/11/01", "2021/10/01", "2020/11", 2020, 2021, 2021)]
        //[TestCase("2020/11/01", "2021/10/01", "2020/12", 2020, 2021, 2021)]
        //[TestCase("2020/11/01", "2021/10/01", "2021/4", 2020, 2021, 2021)]

        //[TestCase("2019/12/01", "2019/12/01", "2020/4", 2019, 2019, 2020)]
        //[TestCase("2020/5/04", "2020/5/4", "2020/5", 2020, 2020, 2020)]
        //[TestCase("2020/8/01", "2020/8/01", "2020/11", 2020, 2020, 2020)]
        //[TestCase("2020/11/01", "2020/11/01", "2020/10", 2020, 2020, 2020)]
        //[TestCase("2020/10/01", "2020/10/01", "2020/10", 2020, 2020, 2020)]
        //[TestCase("2021/2/01", "2021/2/01", "2020/10", 2021, 2021, 2020)]

        //[TestCase("2020/12/01", "2021/1/01", "2020/3", 2020, 2021, 2020)]
        //[TestCase("2020/7/01", "2021/1/01", "2020/3", 2020, 2021, 2020)]
        //[TestCase("2020/7/01", "2021/1/01", "2020/3", 2020, 2021, 2020)]
        //[TestCase("2020/12/01", "2021/5/01", "2021/5", 2020, 2021, 2020)]

        //５月
        [TestCase("2020/9/01", "2021/1/01", "2020/4", 2020, 2021, 2020)]
        [TestCase("2020/9/01", "2021/1/01", "2021/2", 2020, 2021, 2021)]

        [TestCase("2020/8/01", "2021/1/01", "2021/1", 2020, 2021, 2021)]
        [TestCase("2020/9/01", "2020/10/01", "2021/2", 2020, 2020, 2021)]
        [TestCase("2020/9/01", "2020/12/01", "2021/2", 2020, 2020, 2021)]

        [TestCase("2020/9/01", "2021/1/01", "2020/4", 2020, 2021, 2020)]
        [TestCase("2020/9/01", "2021/1/01", "2021/2", 2020, 2021, 2021)]
        public void Result(string start, string end, string salesDate, int Xstart, int Xend, int Xsalesdate)
        {
            (int Rstart, int Rend, int RsalesDate) = target.Result(start, end, salesDate);

            Assert.AreEqual(Xstart, Rstart, "開始日");
            Assert.AreEqual(Xend, Rend, "終了日");
            //Assert.AreEqual(Xsalesdate, RsalesDate, "営業日");
        }
        
        //５月
        //[TestCase("2020/9/01", "2021/1/01", "2020/4", 2020, 2021, 2020)]
        [TestCase("2020/9/01", "2021/1/01", "2020/5", 2020, 2021, 2020)]
        [TestCase("2020/9/01", "2021/1/01", "2021/2", 2020, 2021, 2021)]

        [TestCase("2020/8/01", "2021/1/01", "2021/1", 2020, 2021, 2021)]
        //[TestCase("2020/9/01", "2020/10/01", "2021/2", 2020, 2020, 2021)]
        //[TestCase("2020/9/01", "2020/12/01", "2021/2", 2020, 2020, 2021)]

        //
        //[TestCase("2020/1/01", "2020/6/01", "2019/8", 2020, 2020, 2019)]
        //[TestCase("2020/1/01", "2020/6/01", "2020/12", 2020, 2020, 2020)]

        //[TestCase("2020/6/01", "2020/11/01", "2020/1", 2020, 2020, 2020)]
        //[TestCase("2020/6/01", "2020/11/01", "2020/11", 2020, 2020, 2020)]
        //[TestCase("2020/6/01", "2020/11/01", "2021/4", 2020, 2020, 2021)]
        public void Result2(string start, string end, string salesDate, int Xstart, int Xend, int Xsalesdate)
        {
            (int Rstart, int Rend, int RsalesDate) = target.Result2(start, end, salesDate);

            Assert.AreEqual(Xstart, Rstart, "開始日");
            Assert.AreEqual(Xend, Rend, "終了日");
            //Assert.AreEqual(Xsalesdate, RsalesDate, "営業日");
        }
    }
    }
}
